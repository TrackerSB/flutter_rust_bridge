// NOTE: This file is mimicking how a human developer writes tests,
// and is auto-generated from `basic_optional.rs` by frb_internal
// Please do not modify manually, but modify the origin and re-run frb_internal generator

// NOTE: This file is mimicking how a human developer writes tests,
// and is auto-generated by frb_internal
// Please do not modify manually, but modify the origin and re-run frb_internal generator

pub use super::basic_twin_rust_async::*;
pub async fn example_basic_optional_type_i8_twin_rust_async(arg: Option<i8>) -> Option<i8> {
    arg
}

pub async fn example_basic_optional_type_i16_twin_rust_async(arg: Option<i16>) -> Option<i16> {
    arg
}

pub async fn example_basic_optional_type_i32_twin_rust_async(arg: Option<i32>) -> Option<i32> {
    arg
}

pub async fn example_basic_optional_type_i64_twin_rust_async(arg: Option<i64>) -> Option<i64> {
    arg
}

pub async fn example_basic_optional_type_i128_twin_rust_async(arg: Option<i128>) -> Option<i128> {
    arg
}

pub async fn example_basic_optional_type_u8_twin_rust_async(arg: Option<u8>) -> Option<u8> {
    arg
}

pub async fn example_basic_optional_type_u16_twin_rust_async(arg: Option<u16>) -> Option<u16> {
    arg
}

pub async fn example_basic_optional_type_u32_twin_rust_async(arg: Option<u32>) -> Option<u32> {
    arg
}

pub async fn example_basic_optional_type_u64_twin_rust_async(arg: Option<u64>) -> Option<u64> {
    arg
}

pub async fn example_basic_optional_type_u128_twin_rust_async(arg: Option<u128>) -> Option<u128> {
    arg
}

pub async fn example_basic_optional_type_isize_twin_rust_async(
    arg: Option<isize>,
) -> Option<isize> {
    arg
}

pub async fn example_basic_optional_type_usize_twin_rust_async(
    arg: Option<usize>,
) -> Option<usize> {
    arg
}

pub async fn example_basic_optional_type_f32_twin_rust_async(arg: Option<f32>) -> Option<f32> {
    arg
}

pub async fn example_basic_optional_type_f64_twin_rust_async(arg: Option<f64>) -> Option<f64> {
    arg
}

pub async fn example_basic_optional_type_bool_twin_rust_async(arg: Option<bool>) -> Option<bool> {
    arg
}

pub async fn example_basic_optional_type_string_twin_rust_async(
    arg: Option<String>,
) -> Option<String> {
    arg
}

pub async fn example_basic_optional_type_bytes_twin_rust_async(
    arg: Option<Vec<u8>>,
) -> Option<Vec<u8>> {
    arg
}

pub async fn example_basic_optional_type_basic_primitive_enum_twin_rust_async_twin_rust_async(
    arg: Option<BasicPrimitiveEnumTwinRustAsync>,
) -> Option<BasicPrimitiveEnumTwinRustAsync> {
    arg
}

pub async fn example_basic_optional_type_basic_general_enum_twin_rust_async_twin_rust_async(
    arg: Option<BasicGeneralEnumTwinRustAsync>,
) -> Option<BasicGeneralEnumTwinRustAsync> {
    arg
}

pub async fn example_basic_optional_type_basic_struct_twin_rust_async_twin_rust_async(
    arg: Option<BasicStructTwinRustAsync>,
) -> Option<BasicStructTwinRustAsync> {
    arg
}
