// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.0.0-dev.35.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../../frb_generated.dart';
import 'basic.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

Future<int?> exampleBasicOptionalTypeI8TwinNormal({int? arg, dynamic hint}) =>
    RustLib.instance.api
        .crateApiPseudoManualBasicOptionalExampleBasicOptionalTypeI8TwinNormal(
            arg: arg, hint: hint);

Future<int?> exampleBasicOptionalTypeI16TwinNormal({int? arg, dynamic hint}) =>
    RustLib.instance.api
        .crateApiPseudoManualBasicOptionalExampleBasicOptionalTypeI16TwinNormal(
            arg: arg, hint: hint);

Future<int?> exampleBasicOptionalTypeI32TwinNormal({int? arg, dynamic hint}) =>
    RustLib.instance.api
        .crateApiPseudoManualBasicOptionalExampleBasicOptionalTypeI32TwinNormal(
            arg: arg, hint: hint);

Future<int?> exampleBasicOptionalTypeI64TwinNormal({int? arg, dynamic hint}) =>
    RustLib.instance.api
        .crateApiPseudoManualBasicOptionalExampleBasicOptionalTypeI64TwinNormal(
            arg: arg, hint: hint);

Future<int?> exampleBasicOptionalTypeU8TwinNormal({int? arg, dynamic hint}) =>
    RustLib.instance.api
        .crateApiPseudoManualBasicOptionalExampleBasicOptionalTypeU8TwinNormal(
            arg: arg, hint: hint);

Future<int?> exampleBasicOptionalTypeU16TwinNormal({int? arg, dynamic hint}) =>
    RustLib.instance.api
        .crateApiPseudoManualBasicOptionalExampleBasicOptionalTypeU16TwinNormal(
            arg: arg, hint: hint);

Future<int?> exampleBasicOptionalTypeU32TwinNormal({int? arg, dynamic hint}) =>
    RustLib.instance.api
        .crateApiPseudoManualBasicOptionalExampleBasicOptionalTypeU32TwinNormal(
            arg: arg, hint: hint);

Future<int?> exampleBasicOptionalTypeU64TwinNormal({int? arg, dynamic hint}) =>
    RustLib.instance.api
        .crateApiPseudoManualBasicOptionalExampleBasicOptionalTypeU64TwinNormal(
            arg: arg, hint: hint);

Future<int?> exampleBasicOptionalTypeIsizeTwinNormal(
        {int? arg, dynamic hint}) =>
    RustLib.instance.api
        .crateApiPseudoManualBasicOptionalExampleBasicOptionalTypeIsizeTwinNormal(
            arg: arg, hint: hint);

Future<int?> exampleBasicOptionalTypeUsizeTwinNormal(
        {int? arg, dynamic hint}) =>
    RustLib.instance.api
        .crateApiPseudoManualBasicOptionalExampleBasicOptionalTypeUsizeTwinNormal(
            arg: arg, hint: hint);

Future<double?> exampleBasicOptionalTypeF32TwinNormal(
        {double? arg, dynamic hint}) =>
    RustLib.instance.api
        .crateApiPseudoManualBasicOptionalExampleBasicOptionalTypeF32TwinNormal(
            arg: arg, hint: hint);

Future<double?> exampleBasicOptionalTypeF64TwinNormal(
        {double? arg, dynamic hint}) =>
    RustLib.instance.api
        .crateApiPseudoManualBasicOptionalExampleBasicOptionalTypeF64TwinNormal(
            arg: arg, hint: hint);

Future<bool?> exampleBasicOptionalTypeBoolTwinNormal(
        {bool? arg, dynamic hint}) =>
    RustLib.instance.api
        .crateApiPseudoManualBasicOptionalExampleBasicOptionalTypeBoolTwinNormal(
            arg: arg, hint: hint);

Future<String?> exampleBasicOptionalTypeStringTwinNormal(
        {String? arg, dynamic hint}) =>
    RustLib.instance.api
        .crateApiPseudoManualBasicOptionalExampleBasicOptionalTypeStringTwinNormal(
            arg: arg, hint: hint);

Future<Uint8List?> exampleBasicOptionalTypeBytesTwinNormal(
        {Uint8List? arg, dynamic hint}) =>
    RustLib.instance.api
        .crateApiPseudoManualBasicOptionalExampleBasicOptionalTypeBytesTwinNormal(
            arg: arg, hint: hint);

Future<BasicPrimitiveEnumTwinNormal?>
    exampleBasicOptionalTypeBasicPrimitiveEnumTwinNormalTwinNormal(
            {BasicPrimitiveEnumTwinNormal? arg, dynamic hint}) =>
        RustLib.instance.api
            .crateApiPseudoManualBasicOptionalExampleBasicOptionalTypeBasicPrimitiveEnumTwinNormalTwinNormal(
                arg: arg, hint: hint);

Future<BasicGeneralEnumTwinNormal?>
    exampleBasicOptionalTypeBasicGeneralEnumTwinNormalTwinNormal(
            {BasicGeneralEnumTwinNormal? arg, dynamic hint}) =>
        RustLib.instance.api
            .crateApiPseudoManualBasicOptionalExampleBasicOptionalTypeBasicGeneralEnumTwinNormalTwinNormal(
                arg: arg, hint: hint);

Future<BasicStructTwinNormal?>
    exampleBasicOptionalTypeBasicStructTwinNormalTwinNormal(
            {BasicStructTwinNormal? arg, dynamic hint}) =>
        RustLib.instance.api
            .crateApiPseudoManualBasicOptionalExampleBasicOptionalTypeBasicStructTwinNormalTwinNormal(
                arg: arg, hint: hint);
