// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.0.0-dev.33.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../../frb_generated.dart';
import 'basic_twin_sync.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

int? exampleBasicOptionalTypeI8TwinSync({int? arg, dynamic hint}) => RustLib
    .instance.api
    .crateApiPseudoManualBasicOptionalTwinSyncExampleBasicOptionalTypeI8TwinSync(
        arg: arg, hint: hint);

int? exampleBasicOptionalTypeI16TwinSync({int? arg, dynamic hint}) => RustLib
    .instance.api
    .crateApiPseudoManualBasicOptionalTwinSyncExampleBasicOptionalTypeI16TwinSync(
        arg: arg, hint: hint);

int? exampleBasicOptionalTypeI32TwinSync({int? arg, dynamic hint}) => RustLib
    .instance.api
    .crateApiPseudoManualBasicOptionalTwinSyncExampleBasicOptionalTypeI32TwinSync(
        arg: arg, hint: hint);

int? exampleBasicOptionalTypeI64TwinSync({int? arg, dynamic hint}) => RustLib
    .instance.api
    .crateApiPseudoManualBasicOptionalTwinSyncExampleBasicOptionalTypeI64TwinSync(
        arg: arg, hint: hint);

int? exampleBasicOptionalTypeU8TwinSync({int? arg, dynamic hint}) => RustLib
    .instance.api
    .crateApiPseudoManualBasicOptionalTwinSyncExampleBasicOptionalTypeU8TwinSync(
        arg: arg, hint: hint);

int? exampleBasicOptionalTypeU16TwinSync({int? arg, dynamic hint}) => RustLib
    .instance.api
    .crateApiPseudoManualBasicOptionalTwinSyncExampleBasicOptionalTypeU16TwinSync(
        arg: arg, hint: hint);

int? exampleBasicOptionalTypeU32TwinSync({int? arg, dynamic hint}) => RustLib
    .instance.api
    .crateApiPseudoManualBasicOptionalTwinSyncExampleBasicOptionalTypeU32TwinSync(
        arg: arg, hint: hint);

int? exampleBasicOptionalTypeU64TwinSync({int? arg, dynamic hint}) => RustLib
    .instance.api
    .crateApiPseudoManualBasicOptionalTwinSyncExampleBasicOptionalTypeU64TwinSync(
        arg: arg, hint: hint);

int? exampleBasicOptionalTypeIsizeTwinSync({int? arg, dynamic hint}) => RustLib
    .instance.api
    .crateApiPseudoManualBasicOptionalTwinSyncExampleBasicOptionalTypeIsizeTwinSync(
        arg: arg, hint: hint);

int? exampleBasicOptionalTypeUsizeTwinSync({int? arg, dynamic hint}) => RustLib
    .instance.api
    .crateApiPseudoManualBasicOptionalTwinSyncExampleBasicOptionalTypeUsizeTwinSync(
        arg: arg, hint: hint);

double? exampleBasicOptionalTypeF32TwinSync({double? arg, dynamic hint}) => RustLib
    .instance.api
    .crateApiPseudoManualBasicOptionalTwinSyncExampleBasicOptionalTypeF32TwinSync(
        arg: arg, hint: hint);

double? exampleBasicOptionalTypeF64TwinSync({double? arg, dynamic hint}) => RustLib
    .instance.api
    .crateApiPseudoManualBasicOptionalTwinSyncExampleBasicOptionalTypeF64TwinSync(
        arg: arg, hint: hint);

bool? exampleBasicOptionalTypeBoolTwinSync({bool? arg, dynamic hint}) => RustLib
    .instance.api
    .crateApiPseudoManualBasicOptionalTwinSyncExampleBasicOptionalTypeBoolTwinSync(
        arg: arg, hint: hint);

String? exampleBasicOptionalTypeStringTwinSync({String? arg, dynamic hint}) =>
    RustLib.instance.api
        .crateApiPseudoManualBasicOptionalTwinSyncExampleBasicOptionalTypeStringTwinSync(
            arg: arg, hint: hint);

Uint8List? exampleBasicOptionalTypeBytesTwinSync(
        {Uint8List? arg, dynamic hint}) =>
    RustLib.instance.api
        .crateApiPseudoManualBasicOptionalTwinSyncExampleBasicOptionalTypeBytesTwinSync(
            arg: arg, hint: hint);

BasicPrimitiveEnumTwinSync?
    exampleBasicOptionalTypeBasicPrimitiveEnumTwinSyncTwinSync(
            {BasicPrimitiveEnumTwinSync? arg, dynamic hint}) =>
        RustLib.instance.api
            .crateApiPseudoManualBasicOptionalTwinSyncExampleBasicOptionalTypeBasicPrimitiveEnumTwinSyncTwinSync(
                arg: arg, hint: hint);

BasicGeneralEnumTwinSync? exampleBasicOptionalTypeBasicGeneralEnumTwinSyncTwinSync(
        {BasicGeneralEnumTwinSync? arg, dynamic hint}) =>
    RustLib.instance.api
        .crateApiPseudoManualBasicOptionalTwinSyncExampleBasicOptionalTypeBasicGeneralEnumTwinSyncTwinSync(
            arg: arg, hint: hint);

BasicStructTwinSync? exampleBasicOptionalTypeBasicStructTwinSyncTwinSync(
        {BasicStructTwinSync? arg, dynamic hint}) =>
    RustLib.instance.api
        .crateApiPseudoManualBasicOptionalTwinSyncExampleBasicOptionalTypeBasicStructTwinSyncTwinSync(
            arg: arg, hint: hint);
