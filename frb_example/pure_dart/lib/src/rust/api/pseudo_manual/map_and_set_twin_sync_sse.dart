// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.0.0-dev.36.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../../auxiliary/sample_types.dart';
import '../../frb_generated.dart';
import 'enumeration_twin_sync_sse.dart';
import 'misc_example_twin_sync_sse.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';

Map<int, int> funcHashMapI32I32TwinSyncSse(
        {required Map<int, int> arg, dynamic hint}) =>
    RustLib.instance.api
        .crateApiPseudoManualMapAndSetTwinSyncSseFuncHashMapI32I32TwinSyncSse(
            arg: arg, hint: hint);

Set<int> funcHashSetI32TwinSyncSse({required Set<int> arg, dynamic hint}) =>
    RustLib.instance.api
        .crateApiPseudoManualMapAndSetTwinSyncSseFuncHashSetI32TwinSyncSse(
            arg: arg, hint: hint);

Map<String, String> funcHashMapStringStringTwinSyncSse(
        {required Map<String, String> arg, dynamic hint}) =>
    RustLib.instance.api
        .crateApiPseudoManualMapAndSetTwinSyncSseFuncHashMapStringStringTwinSyncSse(
            arg: arg, hint: hint);

Set<String> funcHashSetStringTwinSyncSse(
        {required Set<String> arg, dynamic hint}) =>
    RustLib.instance.api
        .crateApiPseudoManualMapAndSetTwinSyncSseFuncHashSetStringTwinSyncSse(
            arg: arg, hint: hint);

Map<String, Uint8List> funcHashMapStringBytesTwinSyncSse(
        {required Map<String, Uint8List> arg, dynamic hint}) =>
    RustLib.instance.api
        .crateApiPseudoManualMapAndSetTwinSyncSseFuncHashMapStringBytesTwinSyncSse(
            arg: arg, hint: hint);

Map<String, MySize> funcHashMapStringStructTwinSyncSse(
        {required Map<String, MySize> arg, dynamic hint}) =>
    RustLib.instance.api
        .crateApiPseudoManualMapAndSetTwinSyncSseFuncHashMapStringStructTwinSyncSse(
            arg: arg, hint: hint);

Map<String, EnumSimpleTwinSyncSse> funcHashMapStringSimpleEnumTwinSyncSse(
        {required Map<String, EnumSimpleTwinSyncSse> arg, dynamic hint}) =>
    RustLib.instance.api
        .crateApiPseudoManualMapAndSetTwinSyncSseFuncHashMapStringSimpleEnumTwinSyncSse(
            arg: arg, hint: hint);

Map<String, KitchenSinkTwinSyncSse> funcHashMapStringComplexEnumTwinSyncSse(
        {required Map<String, KitchenSinkTwinSyncSse> arg, dynamic hint}) =>
    RustLib.instance.api
        .crateApiPseudoManualMapAndSetTwinSyncSseFuncHashMapStringComplexEnumTwinSyncSse(
            arg: arg, hint: hint);
