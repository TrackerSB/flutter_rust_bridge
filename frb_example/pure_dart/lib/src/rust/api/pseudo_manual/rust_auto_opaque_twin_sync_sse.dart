// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.0.0-dev.35.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../../frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';
import 'package:freezed_annotation/freezed_annotation.dart' hide protected;
import 'rust_auto_opaque_twin_moi.dart';
part 'rust_auto_opaque_twin_sync_sse.freezed.dart';

// The type `HelloOneStructTwinSyncSse` is not used by any `pub` functions, thus it is ignored.
// The type `HelloTwoEnumTwinSyncSse` is not used by any `pub` functions, thus it is ignored.

void rustAutoOpaqueArgOwnTwinSyncSse(
        {required NonCloneSimpleTwinSyncSse arg,
        required int expect,
        dynamic hint}) =>
    RustLib.instance.api
        .crateApiPseudoManualRustAutoOpaqueTwinSyncSseRustAutoOpaqueArgOwnTwinSyncSse(
            arg: arg, expect: expect, hint: hint);

void rustAutoOpaqueArgBorrowTwinSyncSse(
        {required NonCloneSimpleTwinSyncSse arg,
        required int expect,
        dynamic hint}) =>
    RustLib.instance.api
        .crateApiPseudoManualRustAutoOpaqueTwinSyncSseRustAutoOpaqueArgBorrowTwinSyncSse(
            arg: arg, expect: expect, hint: hint);

void rustAutoOpaqueArgMutBorrowTwinSyncSse(
        {required NonCloneSimpleTwinSyncSse arg,
        required int expect,
        required int adder,
        dynamic hint}) =>
    RustLib.instance.api
        .crateApiPseudoManualRustAutoOpaqueTwinSyncSseRustAutoOpaqueArgMutBorrowTwinSyncSse(
            arg: arg, expect: expect, adder: adder, hint: hint);

NonCloneSimpleTwinSyncSse rustAutoOpaqueReturnOwnTwinSyncSse(
        {required int initial, dynamic hint}) =>
    RustLib.instance.api
        .crateApiPseudoManualRustAutoOpaqueTwinSyncSseRustAutoOpaqueReturnOwnTwinSyncSse(
            initial: initial, hint: hint);

NonCloneSimpleTwinSyncSse rustAutoOpaqueArgOwnAndReturnOwnTwinSyncSse(
        {required NonCloneSimpleTwinSyncSse arg, dynamic hint}) =>
    RustLib.instance.api
        .crateApiPseudoManualRustAutoOpaqueTwinSyncSseRustAutoOpaqueArgOwnAndReturnOwnTwinSyncSse(
            arg: arg, hint: hint);

void rustAutoOpaqueTwoArgsTwinSyncSse(
        {required NonCloneSimpleTwinSyncSse a,
        required NonCloneSimpleTwinSyncSse b,
        dynamic hint}) =>
    RustLib.instance.api
        .crateApiPseudoManualRustAutoOpaqueTwinSyncSseRustAutoOpaqueTwoArgsTwinSyncSse(
            a: a, b: b, hint: hint);

void rustAutoOpaqueNormalAndOpaqueArgTwinSyncSse(
        {required NonCloneSimpleTwinSyncSse a,
        required String b,
        dynamic hint}) =>
    RustLib.instance.api
        .crateApiPseudoManualRustAutoOpaqueTwinSyncSseRustAutoOpaqueNormalAndOpaqueArgTwinSyncSse(
            a: a, b: b, hint: hint);

/// "+" inside the type signature
void rustAutoOpaquePlusSignArgTwinSyncSse(
        {required BoxMyTraitTwinSyncSse arg, dynamic hint}) =>
    RustLib.instance.api
        .crateApiPseudoManualRustAutoOpaqueTwinSyncSseRustAutoOpaquePlusSignArgTwinSyncSse(
            arg: arg, hint: hint);

BoxMyTraitTwinSyncSse rustAutoOpaquePlusSignReturnTwinSyncSse({dynamic hint}) =>
    RustLib.instance.api
        .crateApiPseudoManualRustAutoOpaqueTwinSyncSseRustAutoOpaquePlusSignReturnTwinSyncSse(
            hint: hint);

void rustAutoOpaqueCallableArgTwinSyncSse(
        {required BoxFnStringString arg, dynamic hint}) =>
    RustLib.instance.api
        .crateApiPseudoManualRustAutoOpaqueTwinSyncSseRustAutoOpaqueCallableArgTwinSyncSse(
            arg: arg, hint: hint);

BoxFnStringString rustAutoOpaqueCallableReturnTwinSyncSse({dynamic hint}) =>
    RustLib.instance.api
        .crateApiPseudoManualRustAutoOpaqueTwinSyncSseRustAutoOpaqueCallableReturnTwinSyncSse(
            hint: hint);

void rustAutoOpaqueTraitObjectArgOwnTwinSyncSse(
        {required BoxHelloTraitTwinSyncSse arg,
        required String expect,
        dynamic hint}) =>
    RustLib.instance.api
        .crateApiPseudoManualRustAutoOpaqueTwinSyncSseRustAutoOpaqueTraitObjectArgOwnTwinSyncSse(
            arg: arg, expect: expect, hint: hint);

void rustAutoOpaqueTraitObjectArgBorrowTwinSyncSse(
        {required BoxHelloTraitTwinSyncSse arg,
        required String expect,
        dynamic hint}) =>
    RustLib.instance.api
        .crateApiPseudoManualRustAutoOpaqueTwinSyncSseRustAutoOpaqueTraitObjectArgBorrowTwinSyncSse(
            arg: arg, expect: expect, hint: hint);

void rustAutoOpaqueTraitObjectArgMutBorrowTwinSyncSse(
        {required BoxHelloTraitTwinSyncSse arg,
        required String expect,
        dynamic hint}) =>
    RustLib.instance.api
        .crateApiPseudoManualRustAutoOpaqueTwinSyncSseRustAutoOpaqueTraitObjectArgMutBorrowTwinSyncSse(
            arg: arg, expect: expect, hint: hint);

BoxHelloTraitTwinSyncSse rustAutoOpaqueTraitObjectReturnOwnOneTwinSyncSse(
        {dynamic hint}) =>
    RustLib.instance.api
        .crateApiPseudoManualRustAutoOpaqueTwinSyncSseRustAutoOpaqueTraitObjectReturnOwnOneTwinSyncSse(
            hint: hint);

BoxHelloTraitTwinSyncSse rustAutoOpaqueTraitObjectReturnOwnTwoTwinSyncSse(
        {dynamic hint}) =>
    RustLib.instance.api
        .crateApiPseudoManualRustAutoOpaqueTwinSyncSseRustAutoOpaqueTraitObjectReturnOwnTwoTwinSyncSse(
            hint: hint);

void rustAutoOpaqueStructWithGoodAndOpaqueFieldArgOwnTwinSyncSse(
        {required StructWithGoodAndOpaqueFieldTwinSyncSse arg, dynamic hint}) =>
    RustLib.instance.api
        .crateApiPseudoManualRustAutoOpaqueTwinSyncSseRustAutoOpaqueStructWithGoodAndOpaqueFieldArgOwnTwinSyncSse(
            arg: arg, hint: hint);

StructWithGoodAndOpaqueFieldTwinSyncSse
    rustAutoOpaqueStructWithGoodAndOpaqueFieldReturnOwnTwinSyncSse(
            {dynamic hint}) =>
        RustLib.instance.api
            .crateApiPseudoManualRustAutoOpaqueTwinSyncSseRustAutoOpaqueStructWithGoodAndOpaqueFieldReturnOwnTwinSyncSse(
                hint: hint);

void rustAutoOpaqueEnumWithGoodAndOpaqueArgOwnTwinSyncSse(
        {required EnumWithGoodAndOpaqueTwinSyncSse arg, dynamic hint}) =>
    RustLib.instance.api
        .crateApiPseudoManualRustAutoOpaqueTwinSyncSseRustAutoOpaqueEnumWithGoodAndOpaqueArgOwnTwinSyncSse(
            arg: arg, hint: hint);

EnumWithGoodAndOpaqueTwinSyncSse
    rustAutoOpaqueEnumWithGoodAndOpaqueReturnOwnGoodTwinSyncSse(
            {dynamic hint}) =>
        RustLib.instance.api
            .crateApiPseudoManualRustAutoOpaqueTwinSyncSseRustAutoOpaqueEnumWithGoodAndOpaqueReturnOwnGoodTwinSyncSse(
                hint: hint);

EnumWithGoodAndOpaqueTwinSyncSse
    rustAutoOpaqueEnumWithGoodAndOpaqueReturnOwnOpaqueTwinSyncSse(
            {dynamic hint}) =>
        RustLib.instance.api
            .crateApiPseudoManualRustAutoOpaqueTwinSyncSseRustAutoOpaqueEnumWithGoodAndOpaqueReturnOwnOpaqueTwinSyncSse(
                hint: hint);

void rustAutoOpaqueDummyTwinSyncSse(
        {required StructWithGoodAndOpaqueFieldWithoutOptionTwinSyncSse a,
        required EnumWithGoodAndOpaqueWithoutOptionTwinSyncSse b,
        dynamic hint}) =>
    RustLib.instance.api
        .crateApiPseudoManualRustAutoOpaqueTwinSyncSseRustAutoOpaqueDummyTwinSyncSse(
            a: a, b: b, hint: hint);

void rustAutoOpaqueEnumArgBorrowTwinSyncSse(
        {required NonCloneSimpleEnumTwinSyncSse arg, dynamic hint}) =>
    RustLib.instance.api
        .crateApiPseudoManualRustAutoOpaqueTwinSyncSseRustAutoOpaqueEnumArgBorrowTwinSyncSse(
            arg: arg, hint: hint);

NonCloneSimpleEnumTwinSyncSse rustAutoOpaqueEnumReturnOwnTwinSyncSse(
        {dynamic hint}) =>
    RustLib.instance.api
        .crateApiPseudoManualRustAutoOpaqueTwinSyncSseRustAutoOpaqueEnumReturnOwnTwinSyncSse(
            hint: hint);

Stream<NonCloneSimpleTwinSyncSse> rustAutoOpaqueStreamSinkTwinSyncSse(
        {dynamic hint}) =>
    RustLib.instance.api
        .crateApiPseudoManualRustAutoOpaqueTwinSyncSseRustAutoOpaqueStreamSinkTwinSyncSse(
            hint: hint);

void rustAutoOpaqueArgVecOwnTwinSyncSse(
        {required List<NonCloneSimpleTwinSyncSse> arg,
        required List<int> expect,
        dynamic hint}) =>
    RustLib.instance.api
        .crateApiPseudoManualRustAutoOpaqueTwinSyncSseRustAutoOpaqueArgVecOwnTwinSyncSse(
            arg: arg, expect: expect, hint: hint);

List<NonCloneSimpleTwinSyncSse> rustAutoOpaqueReturnVecOwnTwinSyncSse(
        {dynamic hint}) =>
    RustLib.instance.api
        .crateApiPseudoManualRustAutoOpaqueTwinSyncSseRustAutoOpaqueReturnVecOwnTwinSyncSse(
            hint: hint);

void rustAutoOpaqueExplicitArgTwinSyncSse(
        {required NonCloneSimpleTwinSyncSse arg,
        required int expect,
        dynamic hint}) =>
    RustLib.instance.api
        .crateApiPseudoManualRustAutoOpaqueTwinSyncSseRustAutoOpaqueExplicitArgTwinSyncSse(
            arg: arg, expect: expect, hint: hint);

void rustAutoOpaqueExplicitStructTwinSyncSse(
        {required StructWithExplicitAutoOpaqueFieldTwinSyncSse arg,
        dynamic hint}) =>
    RustLib.instance.api
        .crateApiPseudoManualRustAutoOpaqueTwinSyncSseRustAutoOpaqueExplicitStructTwinSyncSse(
            arg: arg, hint: hint);

NonCloneSimpleTwinSyncSse rustAutoOpaqueExplicitReturnTwinSyncSse(
        {required int initial, dynamic hint}) =>
    RustLib.instance.api
        .crateApiPseudoManualRustAutoOpaqueTwinSyncSseRustAutoOpaqueExplicitReturnTwinSyncSse(
            initial: initial, hint: hint);

int rustAutoOpaqueSleepTwinSyncSse(
        {required NonCloneSimpleTwinSyncSse apple,
        required NonCloneSimpleTwinSyncSse orange,
        dynamic hint}) =>
    RustLib.instance.api
        .crateApiPseudoManualRustAutoOpaqueTwinSyncSseRustAutoOpaqueSleepTwinSyncSse(
            apple: apple, orange: orange, hint: hint);

(
  OpaqueOneTwinSyncSse,
  OpaqueTwoTwinSyncSse
) rustAutoOpaqueReturnOpaqueOneAndTwoTwinSyncSse({dynamic hint}) => RustLib
    .instance.api
    .crateApiPseudoManualRustAutoOpaqueTwinSyncSseRustAutoOpaqueReturnOpaqueOneAndTwoTwinSyncSse(
        hint: hint);

OpaqueTwoTwinSyncSse rustAutoOpaqueReturnOpaqueTwoTwinSyncSse({dynamic hint}) =>
    RustLib.instance.api
        .crateApiPseudoManualRustAutoOpaqueTwinSyncSseRustAutoOpaqueReturnOpaqueTwoTwinSyncSse(
            hint: hint);

int rustAutoOpaqueBorrowAndMutBorrowTwinSyncSse(
        {required NonCloneSimpleTwinSyncSse borrow,
        required NonCloneSimpleTwinSyncSse mutBorrow,
        dynamic hint}) =>
    RustLib.instance.api
        .crateApiPseudoManualRustAutoOpaqueTwinSyncSseRustAutoOpaqueBorrowAndMutBorrowTwinSyncSse(
            borrow: borrow, mutBorrow: mutBorrow, hint: hint);

int rustAutoOpaqueBorrowAndBorrowTwinSyncSse(
        {required NonCloneSimpleTwinSyncSse a,
        required NonCloneSimpleTwinSyncSse b,
        dynamic hint}) =>
    RustLib.instance.api
        .crateApiPseudoManualRustAutoOpaqueTwinSyncSseRustAutoOpaqueBorrowAndBorrowTwinSyncSse(
            a: a, b: b, hint: hint);

// Rust type: RustOpaqueNom<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<Box < dyn HelloTraitTwinSyncSse >>>
@sealed
class BoxHelloTraitTwinSyncSse extends RustOpaque {
  BoxHelloTraitTwinSyncSse.dcoDecode(List<dynamic> wire)
      : super.dcoDecode(wire, _kStaticData);

  BoxHelloTraitTwinSyncSse.sseDecode(int ptr, int externalSizeOnNative)
      : super.sseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount: RustLib
        .instance.api.rust_arc_increment_strong_count_BoxHelloTraitTwinSyncSse,
    rustArcDecrementStrongCount: RustLib
        .instance.api.rust_arc_decrement_strong_count_BoxHelloTraitTwinSyncSse,
    rustArcDecrementStrongCountPtr: RustLib.instance.api
        .rust_arc_decrement_strong_count_BoxHelloTraitTwinSyncSsePtr,
  );
}

// Rust type: RustOpaqueNom<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<Box < dyn MyTraitTwinSyncSse + Send + Sync >>>
@sealed
class BoxMyTraitTwinSyncSse extends RustOpaque {
  BoxMyTraitTwinSyncSse.dcoDecode(List<dynamic> wire)
      : super.dcoDecode(wire, _kStaticData);

  BoxMyTraitTwinSyncSse.sseDecode(int ptr, int externalSizeOnNative)
      : super.sseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount: RustLib
        .instance.api.rust_arc_increment_strong_count_BoxMyTraitTwinSyncSse,
    rustArcDecrementStrongCount: RustLib
        .instance.api.rust_arc_decrement_strong_count_BoxMyTraitTwinSyncSse,
    rustArcDecrementStrongCountPtr: RustLib
        .instance.api.rust_arc_decrement_strong_count_BoxMyTraitTwinSyncSsePtr,
  );
}

// Rust type: RustOpaqueNom<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<EnumWithGoodAndOpaqueWithoutOptionTwinSyncSse>>
@sealed
class EnumWithGoodAndOpaqueWithoutOptionTwinSyncSse extends RustOpaque {
  EnumWithGoodAndOpaqueWithoutOptionTwinSyncSse.dcoDecode(List<dynamic> wire)
      : super.dcoDecode(wire, _kStaticData);

  EnumWithGoodAndOpaqueWithoutOptionTwinSyncSse.sseDecode(
      int ptr, int externalSizeOnNative)
      : super.sseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount: RustLib.instance.api
        .rust_arc_increment_strong_count_EnumWithGoodAndOpaqueWithoutOptionTwinSyncSse,
    rustArcDecrementStrongCount: RustLib.instance.api
        .rust_arc_decrement_strong_count_EnumWithGoodAndOpaqueWithoutOptionTwinSyncSse,
    rustArcDecrementStrongCountPtr: RustLib.instance.api
        .rust_arc_decrement_strong_count_EnumWithGoodAndOpaqueWithoutOptionTwinSyncSsePtr,
  );
}

// Rust type: RustOpaqueNom<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<NonCloneSimpleEnumTwinSyncSse>>
@sealed
class NonCloneSimpleEnumTwinSyncSse extends RustOpaque {
  NonCloneSimpleEnumTwinSyncSse.dcoDecode(List<dynamic> wire)
      : super.dcoDecode(wire, _kStaticData);

  NonCloneSimpleEnumTwinSyncSse.sseDecode(int ptr, int externalSizeOnNative)
      : super.sseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount: RustLib.instance.api
        .rust_arc_increment_strong_count_NonCloneSimpleEnumTwinSyncSse,
    rustArcDecrementStrongCount: RustLib.instance.api
        .rust_arc_decrement_strong_count_NonCloneSimpleEnumTwinSyncSse,
    rustArcDecrementStrongCountPtr: RustLib.instance.api
        .rust_arc_decrement_strong_count_NonCloneSimpleEnumTwinSyncSsePtr,
  );
}

// Rust type: RustOpaqueNom<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<NonCloneSimpleTwinSyncSse>>
@sealed
class NonCloneSimpleTwinSyncSse extends RustOpaque {
  NonCloneSimpleTwinSyncSse.dcoDecode(List<dynamic> wire)
      : super.dcoDecode(wire, _kStaticData);

  NonCloneSimpleTwinSyncSse.sseDecode(int ptr, int externalSizeOnNative)
      : super.sseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount: RustLib
        .instance.api.rust_arc_increment_strong_count_NonCloneSimpleTwinSyncSse,
    rustArcDecrementStrongCount: RustLib
        .instance.api.rust_arc_decrement_strong_count_NonCloneSimpleTwinSyncSse,
    rustArcDecrementStrongCountPtr: RustLib.instance.api
        .rust_arc_decrement_strong_count_NonCloneSimpleTwinSyncSsePtr,
  );

  void instanceMethodArgBorrowTwinSyncSse({dynamic hint}) => RustLib
      .instance.api
      .crateApiPseudoManualRustAutoOpaqueTwinSyncSseNonCloneSimpleTwinSyncSseInstanceMethodArgBorrowTwinSyncSse(
          that: this, hint: hint);

  void instanceMethodArgMutBorrowTwinSyncSse({dynamic hint}) => RustLib
      .instance.api
      .crateApiPseudoManualRustAutoOpaqueTwinSyncSseNonCloneSimpleTwinSyncSseInstanceMethodArgMutBorrowTwinSyncSse(
          that: this, hint: hint);

  void instanceMethodArgOwnTwinSyncSse({dynamic hint}) => RustLib.instance.api
      .crateApiPseudoManualRustAutoOpaqueTwinSyncSseNonCloneSimpleTwinSyncSseInstanceMethodArgOwnTwinSyncSse(
          that: this, hint: hint);

  int get instanceMethodGetterTwinSyncSse => RustLib.instance.api
          .crateApiPseudoManualRustAutoOpaqueTwinSyncSseNonCloneSimpleTwinSyncSseInstanceMethodGetterTwinSyncSse(
        that: this,
      );

  NonCloneSimpleTwinSyncSse instanceMethodReturnOwnTwinSyncSse(
          {dynamic hint}) =>
      RustLib.instance.api
          .crateApiPseudoManualRustAutoOpaqueTwinSyncSseNonCloneSimpleTwinSyncSseInstanceMethodReturnOwnTwinSyncSse(
              that: this, hint: hint);

  /// named constructor
  static NonCloneSimpleTwinSyncSse newCustomNameTwinSyncSse({dynamic hint}) =>
      RustLib.instance.api
          .crateApiPseudoManualRustAutoOpaqueTwinSyncSseNonCloneSimpleTwinSyncSseNewCustomNameTwinSyncSse(
              hint: hint);

  /// unnamed constructor
  static NonCloneSimpleTwinSyncSse newTwinSyncSse({dynamic hint}) => RustLib
      .instance.api
      .crateApiPseudoManualRustAutoOpaqueTwinSyncSseNonCloneSimpleTwinSyncSseNewTwinSyncSse(
          hint: hint);

  /// constructor with Result
  static NonCloneSimpleTwinSyncSse newWithResultTwinSyncSse({dynamic hint}) =>
      RustLib.instance.api
          .crateApiPseudoManualRustAutoOpaqueTwinSyncSseNonCloneSimpleTwinSyncSseNewWithResultTwinSyncSse(
              hint: hint);

  static void staticMethodArgBorrowTwinSyncSse(
          {required NonCloneSimpleTwinSyncSse arg, dynamic hint}) =>
      RustLib.instance.api
          .crateApiPseudoManualRustAutoOpaqueTwinSyncSseNonCloneSimpleTwinSyncSseStaticMethodArgBorrowTwinSyncSse(
              arg: arg, hint: hint);

  static void staticMethodArgMutBorrowTwinSyncSse(
          {required NonCloneSimpleTwinSyncSse arg, dynamic hint}) =>
      RustLib.instance.api
          .crateApiPseudoManualRustAutoOpaqueTwinSyncSseNonCloneSimpleTwinSyncSseStaticMethodArgMutBorrowTwinSyncSse(
              arg: arg, hint: hint);

  static void staticMethodArgOwnTwinSyncSse(
          {required NonCloneSimpleTwinSyncSse arg, dynamic hint}) =>
      RustLib.instance.api
          .crateApiPseudoManualRustAutoOpaqueTwinSyncSseNonCloneSimpleTwinSyncSseStaticMethodArgOwnTwinSyncSse(
              arg: arg, hint: hint);

  static NonCloneSimpleTwinSyncSse staticMethodReturnOwnTwinSyncSse(
          {dynamic hint}) =>
      RustLib.instance.api
          .crateApiPseudoManualRustAutoOpaqueTwinSyncSseNonCloneSimpleTwinSyncSseStaticMethodReturnOwnTwinSyncSse(
              hint: hint);
}

// Rust type: RustOpaqueNom<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<OpaqueOneTwinSyncSse>>
@sealed
class OpaqueOneTwinSyncSse extends RustOpaque {
  OpaqueOneTwinSyncSse.dcoDecode(List<dynamic> wire)
      : super.dcoDecode(wire, _kStaticData);

  OpaqueOneTwinSyncSse.sseDecode(int ptr, int externalSizeOnNative)
      : super.sseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount: RustLib
        .instance.api.rust_arc_increment_strong_count_OpaqueOneTwinSyncSse,
    rustArcDecrementStrongCount: RustLib
        .instance.api.rust_arc_decrement_strong_count_OpaqueOneTwinSyncSse,
    rustArcDecrementStrongCountPtr: RustLib
        .instance.api.rust_arc_decrement_strong_count_OpaqueOneTwinSyncSsePtr,
  );
}

// Rust type: RustOpaqueNom<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<OpaqueTwoTwinSyncSse>>
@sealed
class OpaqueTwoTwinSyncSse extends RustOpaque {
  OpaqueTwoTwinSyncSse.dcoDecode(List<dynamic> wire)
      : super.dcoDecode(wire, _kStaticData);

  OpaqueTwoTwinSyncSse.sseDecode(int ptr, int externalSizeOnNative)
      : super.sseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount: RustLib
        .instance.api.rust_arc_increment_strong_count_OpaqueTwoTwinSyncSse,
    rustArcDecrementStrongCount: RustLib
        .instance.api.rust_arc_decrement_strong_count_OpaqueTwoTwinSyncSse,
    rustArcDecrementStrongCountPtr: RustLib
        .instance.api.rust_arc_decrement_strong_count_OpaqueTwoTwinSyncSsePtr,
  );
}

// Rust type: RustOpaqueNom<flutter_rust_bridge::for_generated::RustAutoOpaqueInner<StructWithGoodAndOpaqueFieldWithoutOptionTwinSyncSse>>
@sealed
class StructWithGoodAndOpaqueFieldWithoutOptionTwinSyncSse extends RustOpaque {
  StructWithGoodAndOpaqueFieldWithoutOptionTwinSyncSse.dcoDecode(
      List<dynamic> wire)
      : super.dcoDecode(wire, _kStaticData);

  StructWithGoodAndOpaqueFieldWithoutOptionTwinSyncSse.sseDecode(
      int ptr, int externalSizeOnNative)
      : super.sseDecode(ptr, externalSizeOnNative, _kStaticData);

  static final _kStaticData = RustArcStaticData(
    rustArcIncrementStrongCount: RustLib.instance.api
        .rust_arc_increment_strong_count_StructWithGoodAndOpaqueFieldWithoutOptionTwinSyncSse,
    rustArcDecrementStrongCount: RustLib.instance.api
        .rust_arc_decrement_strong_count_StructWithGoodAndOpaqueFieldWithoutOptionTwinSyncSse,
    rustArcDecrementStrongCountPtr: RustLib.instance.api
        .rust_arc_decrement_strong_count_StructWithGoodAndOpaqueFieldWithoutOptionTwinSyncSsePtr,
  );
}

@freezed
sealed class EnumWithGoodAndOpaqueTwinSyncSse
    with _$EnumWithGoodAndOpaqueTwinSyncSse {
  const EnumWithGoodAndOpaqueTwinSyncSse._();

  const factory EnumWithGoodAndOpaqueTwinSyncSse.good(
    String field0,
  ) = EnumWithGoodAndOpaqueTwinSyncSse_Good;
  const factory EnumWithGoodAndOpaqueTwinSyncSse.opaque(
    NonCloneSimpleTwinSyncSse field0,
  ) = EnumWithGoodAndOpaqueTwinSyncSse_Opaque;
}

class StructWithExplicitAutoOpaqueFieldTwinSyncSse {
  final NonCloneSimpleTwinSyncSse autoOpaque;
  final int normal;

  const StructWithExplicitAutoOpaqueFieldTwinSyncSse({
    required this.autoOpaque,
    required this.normal,
  });

  @override
  int get hashCode => autoOpaque.hashCode ^ normal.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is StructWithExplicitAutoOpaqueFieldTwinSyncSse &&
          runtimeType == other.runtimeType &&
          autoOpaque == other.autoOpaque &&
          normal == other.normal;
}

class StructWithGoodAndOpaqueFieldTwinSyncSse {
  final String good;
  final NonCloneSimpleTwinSyncSse opaque;
  final NonCloneSimpleTwinSyncSse? optionOpaque;

  const StructWithGoodAndOpaqueFieldTwinSyncSse({
    required this.good,
    required this.opaque,
    this.optionOpaque,
  });

  @override
  int get hashCode => good.hashCode ^ opaque.hashCode ^ optionOpaque.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is StructWithGoodAndOpaqueFieldTwinSyncSse &&
          runtimeType == other.runtimeType &&
          good == other.good &&
          opaque == other.opaque &&
          optionOpaque == other.optionOpaque;
}
